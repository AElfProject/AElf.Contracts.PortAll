syntax = "proto3";

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "callback_input.proto";
import "acs13.proto";

option csharp_namespace = "AElf.Contracts.Bridge";

service BridgeContract {
    option (aelf.csharp_state) = "AElf.Contracts.Bridge.BridgeContractState";
    option (aelf.base) = "acs13.proto";

    rpc Initialize (InitializeInput) returns (google.protobuf.Empty) {}

    rpc CreateBridge (CreateBridgeInput) returns (google.protobuf.Empty) {}

    // view methods
    
    rpc GetController (google.protobuf.Empty) returns (aelf.Address) {
        option (aelf.is_view) = true;
    }
}

message InitializeInput {
    aelf.Address oracle_contract_address = 1;
}

message CreateBridgeInput {
    BridgeTokenInfo origin_token_info = 1;
    string wrapped_token_symbol = 2;
}

message BridgeTokenInfo {
    string symbol = 1;
    string chain_name = 2;
    string bridge_type = 3;// ERC20, ERC721, ...
    string contract_address = 4;
    bool is_native_token = 5;
}

// Events
message BridgeCreated {
    option (aelf.is_event) = true;
    BridgeTokenInfo origin_token_info = 1;
    string wrapped_token_symbol = 2;
}